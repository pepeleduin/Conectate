const {
  createBot,
  createProvider,
  createFlow,
  addKeyword,
} = require("@bot-whatsapp/bot");

const QRPortalWeb = require("@bot-whatsapp/portal");
const WsProvider = require("@bot-whatsapp/provider/baileys");
const DBAdapter = require("@bot-whatsapp/database/mock");

const emojis = [
  "‚ö†Ô∏è",
  "ü§î",
  "üí∞",
  "‚ö°",
  "‚¨ÜÔ∏è",
  "üì°",
  "üôã",
  "üßë‚Äçüíª",
  "üìë",
  "üîí",
  "üí∞",
  "üë•",
  "üîß",
  "üîå",
  "‚õ∞Ô∏è",
  "üåΩ",
  "üèùÔ∏è",
  "üè¢",
  "üôè",
  "üìé",
  "üí≥",
  "üìÑ",
  "üõéÔ∏è",
  "üè†",
  "üü©",
  "üü®",
];

const flowAlamor = addKeyword(["üè¢ Matriz Alamor"]).addAnswer([
  "üè¢ La *direcci√≥n* de nuestra matriz en Alamor es calle Guayaquil y avenida R√≠o Amazonas, frente a Comercial Macas.\n",
  "ü§ñ ¬°TinkiBot te saluda desde aqu√≠!\n",
  "üì± Te recordamos que el *tel√©fono celular* solamente recibe mensajes de WhatsApp:",
  "üìû Nuestro *tel√©fono convencional* es:",
  "072 680 288",
]);

const flowCelica = addKeyword(["‚õ∞Ô∏è Celica"]).addAnswer([
  "üè† La *direcci√≥n* de nuestra sucursal Celica es calles Garc√≠a Moreno y 10 de agosto, a pocos pasos de CNT.\n",
  "üì± Estaremos gustosos de atenderte si nos contactas al *tel√©fono celular*:",
  "096 899 5286\n",
  "üí¨ O directamente al *WhatsApp*",
  "wa.me/593968995286",
]);

const flowPindal = addKeyword(["üåΩ Pindal"]).addAnswer([
  "üè† La *direcci√≥n* de nuestra sucursal Pindal es calles Loja e Isidro Ayora, diagonal a Banco Codesarrollo.\n",
  "üì± Estaremos gustosos de atenderte si nos contactas al *tel√©fono celular*",
  "096 971 0361.\n",
  "üí¨ O directamente al *WhatsApp*",
  "wa.me/593969710361",
]);

const flowZapotillo = addKeyword(["üèùÔ∏è Zapotillo"]).addAnswer([
  "üè† La *direcci√≥n* de nuestra sucursal Zapotillo es calles Sucre, entre 24 de mayo y 18 de noviembre, junto a la Fiscal√≠a.\n",
  "üì± Estaremos gustosos de atenderte si nos contactas al *tel√©fono celular*",
  "096 936 2482.\n",
  "üí¨ O directamente al *WhatsApp*",
  "wa.me/593969362482",
]);

const flowSucursales = addKeyword(["üè† Sucursales"]).addAnswer(
  "Estamos ubicados en las siguientes cabeceras cantonales:",
  {
    buttons: [
      { body: "‚õ∞Ô∏è Celica" },
      { body: "üåΩ Pindal" },
      { body: "üèùÔ∏è Zapotillo" },
    ],
  }
);

const flowLocalizacion = addKeyword(["üè¢ Oficinas"]).addAnswer(
  "Tenemos nuestra oficina matriz en Alamor y tres sucursales en Celica, Pindal y Zapotillo.",
  {
    buttons: [{ body: "üè¢ Matriz Alamor" }, { body: "üè† Sucursales" }],
  }
);

const flowServicios = addKeyword(["üõéÔ∏è Servicios"]).addAnswer([
  "üîó En el siguiente enlace podr√°s encontrar nuestro *cat√°logo de servicios*:",
  "https://wa.me/c/593989681810",
]);

const flowCuentaPichincha = addKeyword(["üü® Banco Pichincha"])
  .addAnswer([
    "üü® A continuaci√≥n te compartimos los datos de nuestra cuenta bancaria del *Banco Pichincha*.",
  ])
  .addAnswer(
    [
      "üìå *Tipo de cuenta*: Ahorros",
      "üî¢ *N√∫mero*: 3992698800",
      "üë§ *Titular*: VICTOR DANIEL MACAS CALDERON",
      "üìÑ *C√©dula*: 1103809701",
      "‚úâÔ∏è *E-mail*: danielm129@hotmail.com",
    ],
    { delay: 2000 }
  )
  .addAnswer(
    [
      "No olvides que luego de hacer el pago debes enviarnos la *foto del comprobante* por este chat, junto con los *nombres completos* del titular del servicio.\n",
      "ü§ù Muchas gracias.",
    ],
    { delay: 4000 }
  );

const flowCuentaLoja = addKeyword(["üü© Banco de Loja"])
  .addAnswer([
    "üü© A continuaci√≥n te compartimos los datos de nuestra cuenta bancaria del *Banco de Loja*.",
  ])
  .addAnswer(
    [
      "üìå *Tipo de cuenta*: Corriente",
      "üî¢ *N√∫mero*: 2903035613",
      "üë§ *Titular*: COMERCIALIZADORA MACAS CALDERON CONECTATE CIA LTDA",
      "üìÑ *RUC*: 0190460878001",
      "‚úâÔ∏è *E-mail*: conectatecialtda@gmail.com",
    ],
    { delay: 2000 }
  )
  .addAnswer(
    [
      "No olvides que luego de hacer el pago debes enviarnos la *foto del comprobante* por este chat, junto con los *nombres completos* del titular del servicio.\n",
      "ü§ù Muchas gracias.",
    ],
    { delay: 4000 }
  );

const flowCuentasBancarias = addKeyword(["üìÑ Datos de las cuentas"]).addAnswer(
  ["Por favor, elige la entidad bancaria"],
  {
    buttons: [{ body: "üü© Banco de Loja" }, { body: "üü® Banco Pichincha" }],
  }
);

const flowMetodosDePago = addKeyword(["üí≥ M√©todos de Pago"]).addAnswer(
  [
    "Para pagar por el servicio ofrecido por CON√âCTATE puedes hacerlo *en efectivo* en nuestras oficinas.\n",
    "Tambi√©n puedes realizar un *dep√≥sito* o *transferencia* a las cuentas en Banco de Loja o Banco Pichincha",
  ],
  {
    buttons: [{ body: "üè¢ Oficinas" }, { body: "üìÑ Datos de las cuentas" }],
  }
);

const flowComprobante = addKeyword(["üìé Registrar comprobante"]).addAnswer([
  "üìé Por favor, sube la *foto del comprobante* y escribe los *nombres completos* del titular del servicio.\n",
  "üßë‚Äçüíª Luego, uno de nuestros asesores verificar√° el pago y habilitar√° el servicio, de ser el caso.\n",
  "üòä Muchas gracias.",
]);

const flowFactura = addKeyword(["üìÑ Solicitar factura"]).addAnswer(
  "Por favor, ingresa los *nombres completos* del titular del servicio, su *c√©dula* y su *correo electr√≥nico*.",
  { capture: true },
  async (ctx, { flowDynamic, fallBack }) => {
    const content_msg = ctx.body;
    if (!emojis.some((emoji) => content_msg.includes(emoji))) {
      var msg = {
        body: `‚úÖ Los datos han quedado registrados satisfactoriamente.\n
En la brevedad posible uno de nuestros asesores generar√° la factura y la enviar√° su correo electr√≥nico.\n
ü§ù Muchas gracias.`,
      };
      flowDynamic(msg);
    }
  }
);

const flowPromesa = addKeyword(["üôè Promesa de pago"]).addAnswer(
  "Por favor, ay√∫danos con los *nombres completos* del titular del servicio.",
  { capture: true },
  async (ctx, { flowDynamic, fallBack }) => {
    const content_msg = ctx.body;
    if (!emojis.some((emoji) => content_msg.includes(emoji))) {
      var msg = {
        body: `‚úÖ Los datos han quedado registrados satisfactoriamente.\n
En la brevedad posible uno de nuestros asesores ingresar√° tu promesa de pago al sistema.
ü§ù Muchas gracias.`,
      };
      flowDynamic(msg);
    }
  }
);

const flowError = addKeyword(["‚ö†Ô∏è Error en pagos"]).addAnswer([
  "Por favor, ay√∫danos con los *nombres completos* del titular del servicio, la *localizaci√≥n* y *detalles* del problema.\n",
  "Uno de nuestros asesores verificar√° el error y proceder√° a solucionarlo.\n",
  "ü§ù Muchas gracias.",
]);

const flowPagosOtros = addKeyword(["ü§î Otros"]).addAnswer(
  "Ponemos a tu disposici√≥n la siguientes opciones:",
  {
    buttons: [
      { body: "üìÑ Solicitar factura" },
      { body: "üôè Promesa de pago" },
      { body: "‚ö†Ô∏è Error en pagos" },
    ],
  }
);

const flowPagos = addKeyword(["üí∞ Pagos"]).addAnswer(
  "Por favor, elige una de las opciones siguientes:",
  {
    buttons: [
      { body: "üí≥ M√©todos de Pago" },
      { body: "üìé Registrar comprobante" },
      { body: "ü§î Otros" },
    ],
  }
);

const flowAcelerar = addKeyword(["‚ö° Acelerar internet"])
  .addAnswer(
    "Por favor, ay√∫danos con los *nombres completos* del titular del servicio y la *localizaci√≥n*.",
    { capture: true },
    async (ctx, { flowDynamic }) => {
      const content_msg = ctx.body;
      if (!emojis.some((emoji) => content_msg.includes(emoji))) {
        var msg = {
          body: `üßê Te compartimos a continuaci√≥n un enlace a un *test de velocidad* de tu conexi√≥n a internet. üîó \nfast.com`,
        };
        flowDynamic(msg);
      }
    }
  )
  .addAnswer(
    [
      "Por favor, *accede* al enlace, *espera* hasta que termine la prueba y *env√≠anos* una captura de los resultados.",
    ],
    {
      delay: 3000,
    }
  )
  .addAnswer(
    [
      "Tus datos quedar√°n registrados en este chat y en la brevedad posible el equipo de asesores te ayudar√° con este inconveniente.",
    ],
    {
      delay: 3000,
    }
  )
  .addAnswer(
    [
      "Ten presente que el servicio de soporte se provee siempre y cuando est√©s al d√≠a con los pagos.\n",
      "ü§ù Estamos para servirte.",
    ],
    { delay: 3000 }
  );

const flowContrase√±aSelfFibra = addKeyword(["‚¨ÜÔ∏è Fibra √≥ptica"])
  .addAnswer(
    "Por favor, ay√∫danos con los *nombres completos* del titular del servicio.",
    { capture: true },
    async (ctx, { flowDynamic }) => {
      const content_msg = ctx.body;
      if (!emojis.some((emoji) => content_msg.includes(emoji))) {
        var msg = {
          body: `‚úÖ Estimad@ ${content_msg}, los datos han quedado registrados satisfactoriamente.\n`,
        };
        flowDynamic(msg);
      }
    }
  )
  .addAnswer([
    "üßë‚Äçüíª El equipo de asesores revisar√° lo m√°s breve posible si el dispositivo permite el cambio de contrase√±a por parte del usuario y le notificaremos oportunamente.\n",
    "ü§ù Muchas gracias.",
  ]);

const flowContrase√±aSelfAntenaTPL = addKeyword(["TP-Link"]).addAnswer(
  "Te compartimos el manual en formato PDF. Recuerda que si requieres ayuda de parte de los t√©cnicos, estaremos atentos para hacerlo.",
  {
    media:
      "https://www.keepandshare.com/doc26/113345/manual-routers-tplink-pdf-307k?dn=y&dnad=y",
  }
);

const flowContrase√±aSelfAntenaQPC = addKeyword(["Otro router"]).addAnswer(
  "Por favor, ay√∫danos con el modelo del equipo.",
  { capture: true },
  async (ctx, { flowDynamic }) => {
    const content_msg = ctx.body;
    if (!emojis.some((emoji) => content_msg.includes(emoji))) {
      var msg = {
        body: `Uno de los asesores te ayudar√° en la brevedad posible con los pasos a seguir.
  ü§ù Estamos para servirte.`,
      };
      flowDynamic(msg);
    }
  }
);

const flowContrase√±aSelfAntenaOtro = addKeyword(["QPCOM"]).addAnswer(
  "Te compartimos el manual en formato PDF. Recuerda que si requieres ayuda de parte de los t√©cnicos, estaremos atentos para hacerlo.",
  {
    media:
      "https://www.keepandshare.com/doc26/113351/manual-routers-qpcom-pdf-693k?dn=y&dnad=y",
  }
);

const flowContrase√±aSelfAntena = addKeyword(["üì° Antena"]).addAnswer(
  [
    "üîé Por favor, revisa tu router y dinos si es uno de las siguientes modelos: *QPCOM*, *TP-Link* u *otro router*. Los nombres puedes encontrarlos en la base del router.\n",
    "üìò Luego, te compartiremos el manual respectivo en formato PDF. Recuerda que si requieres ayuda de parte de los t√©cnicos, estaremos atentos para hacerlo.\n",
    "ü§ù Gracias de antemano.",
  ],
  {
    buttons: [{ body: "TP-Link" }, { body: "QPCOM" }, { body: "Otro router" }],
  }
);

const flowContrase√±aSelf = addKeyword(["üôã Por mi cuenta"]).addAnswer(
  "üîç ¬øTu internet llega por fibra √≥ptica o por antena?",
  {
    buttons: [{ body: "‚¨ÜÔ∏è Fibra √≥ptica" }, { body: "üì° Antena" }],
  }
);

const flowContrase√±aAyuda = addKeyword(["üßë‚Äçüíª Necesito ayuda"]).addAnswer(
  "Por favor, ay√∫danos con los *nombres completos* del titular del servicio.",
  { capture: true },
  async (ctx, { flowDynamic }) => {
    const content_msg = ctx.body;
    if (!emojis.some((emoji) => content_msg.includes(emoji))) {
      var msg = {
        body: `Finalmente, ingresa la *contrase√±a*. Tus datos quedar√°n registrados y en la brevedad posible el equipo t√©cnico te brindar√° el servicio de soporte.\n
ü§ù Gracias de antemano.`,
      };
      flowDynamic(msg);
    }
  }
);

const flowContrase√±a = addKeyword(["üîí Cambio de contrase√±a"]).addAnswer(
  "üîç Por favor, ind√≠canos si quieres hacer el cambio por tu cuenta o que te ayudemos desde las oficinas.",
  {
    buttons: [{ body: "üôã Por mi cuenta" }, { body: "üßë‚Äçüíª Necesito ayuda" }],
  }
);

const flowFinSoporte = addKeyword([
  "üîå Reconectar internet",
  "üì° Arreglar canales",
  "üîß Cambiar equipos",
])
  .addAnswer(
    "Por favor, ay√∫danos con los *nombres completos* del titular del servicio y la *localizaci√≥n*.",
    { capture: true },
    async (ctx, { flowDynamic }) => {
      const content_msg = ctx.body;
      if (!emojis.some((emoji) => content_msg.includes(emoji))) {
        var msg = {
          body: "‚úÖ Tus datos han sido registrados satisfactoriamente. En la brevedad posible el equipo de asesores te ayudar√° a solventar este inconveniente.",
        };
        flowDynamic(msg);
      }
    }
  )
  .addAnswer(
    [
      "Ten presente que el servicio de soporte se provee siempre y cuando est√©s al d√≠a con los pagos.\n",
      "ü§ù Muchas gracias.",
    ],
    { delay: 3000 }
  );

const flowCambioDomicilio = addKeyword(["üöö Cambio de domicilio"]).addAnswer(
  "Por favor, ay√∫danos con los *nombres completos* del titular del servicio, la *localizaci√≥n actual* de los equipos y la *nueva direcci√≥n* a trasladar.",
  { capture: true },
  async (ctx, { flowDynamic }) => {
    const content_msg = ctx.body;
    if (!emojis.some((emoji) => content_msg.includes(emoji))) {
      var msg = {
        body: `‚úÖ Tus datos han sido registrados satisfactoriamente. En la brevedad posible el equipo de asesores proceder√° a dar el servicio de soporte.\n
ü§ù Muchas gracias.`,
      };
      flowDynamic(msg);
    }
  }
);

const flowSoporteExtras = addKeyword(["üìë Ingresar requerimiento"])
  .addAnswer(
    "Por favor, ay√∫danos con los *nombres completos* del titular del servicio, la *localizaci√≥n* y *detalles* del problema.",
    { capture: true },
    async (ctx, { flowDynamic }) => {
      const content_msg = ctx.body;
      if (!emojis.some((emoji) => content_msg.includes(emoji))) {
        var msg = {
          body: "‚úÖ Tus datos han sido registrados satisfactoriamente. En la brevedad posible el equipo de asesores te ayudar√° a solventar este inconveniente.",
        };
        flowDynamic(msg);
      }
    }
  )
  .addAnswer(
    [
      "Ten presente que el servicio de soporte se provee siempre y cuando est√©s al d√≠a con los pagos.\n",
      "ü§ù Muchas gracias.",
    ],
    { delay: 4000 }
  );

const flowSoporteOtros = addKeyword(["‚ö†Ô∏è Otros"]).addAnswer(
  "Por favor, especifica c√≥mo te podemos ayudar:",
  {
    buttons: [
      { body: "üì° Arreglar canales" },
      { body: "üîí Cambio de contrase√±a" },
      { body: "üìë Ingresar requerimiento" },
    ],
  }
);

const flowSoporteEquipos = addKeyword(["üì° Equipos"]).addAnswer(
  "Por favor, especifica c√≥mo te podemos ayudar:",
  {
    buttons: [
      { body: "üöö Cambio de domicilio" },
      { body: "üîß Cambiar equipos" },
    ],
  }
);

const flowSoporteConexion = addKeyword(["üîå Conexi√≥n"]).addAnswer(
  "Por favor, especifica c√≥mo te podemos ayudar:",
  {
    buttons: [
      { body: "üîå Reconectar internet" },
      { body: "‚ö° Acelerar internet" },
    ],
  }
);

const flowSoporte = addKeyword(["üîß Soporte"])
  .addAnswer(
    "‚ÑπÔ∏è Recuerda que el servicio de soporte se realiza en un *plazo de 24 horas*."
  )
  .addAnswer("Por favor, ind√≠canos en qu√© √°rea necesitas ayuda.", {
    delay: 2000,
    buttons: [
      { body: "üîå Conexi√≥n" },
      { body: "üì° Equipos" },
      { body: "‚ö†Ô∏è Otros" },
    ],
  });

const flowRedesSociales = addKeyword(["üë• Redes sociales"]).addAnswer([
  "Encu√©ntranos en las siguientes redes sociales:\n",
  "üîµ *Facebook*:\nfacebook.com/conectateinternetec\n",
  "üü£ *Instagram*:\ninstagram.com/conectate_mc\n",
  "‚ö´ *TikTok*:\ntiktok.com/@conectate.ec",
]);

const flowNosotros = addKeyword(["üßë‚Äçüíª Con√≥cenos"])
  .addAnswer([
    "üßë‚Äçüíª *CON√âCTATE* üë®‚Äçüîß es una empresa proveedora de servicio de internet seguro, r√°pido y confiable en la regi√≥n sur del Ecuador.",
  ])
  .addAnswer(
    [
      "üìß Nuestro *correo electr√≥nico* es",
      "conectate_ec@hotmail.com\n",
      "‚ÑπÔ∏è Los *tel√©fonos* y *direcciones* depender√°n de la oficina a la que te quieras contactar.\n",
      "üë• Tambi√©n ponemos a tu disposici√≥n nuestras *redes sociales*.",
    ],
    {
      delay: 3000,
    }
  )
  .addAnswer("Por favor, ind√≠canos la informaci√≥n que buscas.", {
    delay: 4000,
    buttons: [
      { body: "üõéÔ∏è Servicios" },
      { body: "üè¢ Oficinas" },
      { body: "üë• Redes sociales" },
    ],
  });

const flowPrincipal = addKeyword([
  "chatbot",
  "hola",
  "hey",
  "hello",
  "menu",
  "men√∫",
  "con√©ctate",
  "conectate",
  "tinkibot",
])
  .addAnswer([
    "üëã ¬°Hola! Soy TinkiBot, el *Asistente Virtual* de *CON√âCTATE* ü§ñ\n",
  ])
  .addAnswer(
    [
      "üóìÔ∏è El *horario de atenci√≥n* en nuestra *agencia matriz* de Alamor es de lunes a domingo de 08:00 AM a 05:00 PM.\n",
      "üè† Y en las *sucursales*, de lunes a viernes de 08:00 AM a 05:00 PM y los domingos de 08:00 AM a 12:00 PM.",
    ],
    { delay: 2000 }
  )
  .addAnswer(
    [
      "‚ö†Ô∏è Recuerda que las *fechas de pago* del internet son del 1 al 10 de cada mes y suspensi√≥n por mora el 11.",
    ],
    { delay: 4000 }
  )
  .addAnswer("Por favor, selecciona la opci√≥n de tu preferencia.", {
    delay: 3000,
    buttons: [
      { body: "üîß Soporte" },
      { body: "üí∞ Pagos" },
      { body: "üßë‚Äçüíª Con√≥cenos" },
    ],
  });

const main = async () => {
  const adapterDB = new DBAdapter();
  const adapterFlow = createFlow([
    flowPrincipal,
    flowAlamor,
    flowCelica,
    flowComprobante,
    flowError,
    flowLocalizacion,
    flowMetodosDePago,
    flowPagos,
    flowPindal,
    flowServicios,
    flowSoporte,
    flowZapotillo,
    flowAcelerar,
    flowContrase√±a,
    flowContrase√±aSelf,
    flowContrase√±aSelfFibra,
    flowContrase√±aSelfAntena,
    flowContrase√±aSelfAntenaTPL,
    flowContrase√±aSelfAntenaQPC,
    flowContrase√±aAyuda,
    flowFinSoporte,
    flowCuentaLoja,
    flowCuentaPichincha,
    flowNosotros,
    flowRedesSociales,
    flowSoporteConexion,
    flowSoporteEquipos,
    flowSoporteOtros,
    flowSoporteExtras,
    flowPagosOtros,
    flowPromesa,
    flowSucursales,
    flowCuentasBancarias,
    flowFactura,
    flowContrase√±aSelfAntenaOtro,
    flowCambioDomicilio,
  ]);
  const adapterProvider = createProvider(WsProvider);

  createBot({
    flow: adapterFlow,
    provider: adapterProvider,
    database: adapterDB,
  });

  QRPortalWeb();
};

main();
